<?php
/**
 * @file
 * Supports mapping incoming data provided as string identifiers to arbitrary
 * Drupal content.
 *
 * Provides a feeds_tamper option to do the conversion, and
 */

/**
 * Provides an alternate field target for fields of type entityreference,
 * where this id can be saved.
 *
 * The mapper provided by feeds.module doesn't support just being given an
 * entity ID so we need to build our own.
 *
 * Based on the same tool by feeds_entityreference.module.
 *
 * Implements hook_feeds_processor_targets_alter().
 */
function feeds_tamper_string2id_feeds_processor_targets_alter(&$targets, $entity_type, $bundle_name) {
  foreach (field_info_instances($entity_type, $bundle_name) as $field_name => $instance_info) {
    $field_info = field_info_field($field_name);
    if ($field_info['type'] == 'entityreference') {
      $strings = array('@label' => $instance_info['label']);
      $targets['entityreference:' . $field_name] = array(
        'name' => t('@label: Entity ID', $strings),
        'description' => t('Raw value for entity reference field: @label', $strings),
        'callback' => 'feeds_tamper_string2id_set_entityreference_target',
      );
    }
  }
}


/**
 * Callback for mapping entity reference fields.
 *
 * Given a numeric ID, validate it and save as the entityreference's target_id.
 *
 * Based on the same tool by feeds_entityreference.module.
 */
function feeds_tamper_string2id_set_entityreference_target($source, $entity, $target, $value, $mapping) {
  if (empty($value)) {
    return;
  }
  if (!is_array($value)) {
    $value = array($value);
  }

  $target = str_replace('entityreference:', '', $target);
  $info = field_info_field($target);
  $language = isset($mapping['language']) ? $mapping['language'] : LANGUAGE_NONE;

  $field = isset($entity->$target) ? $entity->$target : array($language => array());

  // Allow for multiple mappings to the same target.
  $delta = count($field[$language]);

  foreach ($value as $v) {
    if ($info['cardinality'] == $delta) {
      break;
    }
    if (is_object($v) && ($v instanceof FeedsElement)) {
      $v = $v->getValue();
    }
    if (($v) && (is_numeric($v))) {
      $field[$language][$delta]['target_id'] = $v;
      $delta++;
    }
  }
  $entity->{$target} = $field;
}


/**
 * Advertise our feeds_tamper plugin.
 *
 * Implements hook_ctools_plugin_directory().
 */
function feeds_tamper_string2id_ctools_plugin_directory($module, $plugin) {
  if ($module == 'feeds_tamper') {
    return 'plugins';
  }
}
